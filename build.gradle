buildscript {
    repositories {
    	mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
		classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.9.0'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "maven"

    ext {
		antlrVersion = '4.6'
		mustacheVersion = '0.8.18'
		
		junitVersion = '4.11'
		jmockVersion = '2.6.0'
    }

	repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
    
    if(project.hasProperty('ossrhUser') && project.hasProperty("release")) {
		apply plugin: "io.codearte.nexus-staging"
		
		nexusStaging {
			packageGroup = 'org.mini2Dx'
			username = ossrhUser
			password = ossrhPassword
		}
	}
}

project(":jarn-antlr") {
	apply plugin: 'antlr'
	
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
	
	dependencies {
		antlr "org.antlr:antlr4:$antlrVersion"
	}
	
	generateGrammarSource {
		arguments += ["-package", "org.mini2Dx.yarn.parser"]
	}
}

project(":jarn") {
	apply plugin: "java"
	apply plugin: "signing"
	
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
	
	group = 'org.mini2Dx'
    version = '1.1.3-SNAPSHOT'
    description = 'Java-based interpreter for Yarn'
    
    task copyJarnSourcesToProject(type: Copy, dependsOn: project(":jarn-antlr").compileJava) {
		from "$projectDir/../jarn-antlr/build/generated-src/antlr/main/"
		into "$projectDir/src/main/java/org/mini2Dx/yarn/parser/"
	}
    
    task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}
	
	task docs(type: Javadoc) {
		source project.sourceSets.main.allJava
		classpath = files(project.sourceSets.main.compileClasspath)
		destinationDir = new File(project.parent.projectDir, "docs/javadoc/${version}")
	}
	
	artifacts {
		archives javadocJar, sourcesJar
	}
	
	dependencies {
		compile "org.antlr:antlr4-runtime:$antlrVersion"
		compile "com.github.spullara.mustache.java:compiler:$mustacheVersion"
		
		testCompile "junit:junit:$junitVersion"
		testCompile "org.jmock:jmock-legacy:$jmockVersion"
		testCompile "org.jmock:jmock-junit4:$jmockVersion"	
	}
	
	compileJava.dependsOn copyJarnSourcesToProject
	
	if(project.hasProperty('ossrhUser') && project.hasProperty("release")) {
		signing {
			sign configurations.archives
		}

		println project.version
		
		uploadArchives {
			repositories {
				mavenDeployer {
					// POM signature
					beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
					// Target repository
					repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
						authentication(userName: ossrhUser, password: ossrhPassword)
					}
					pom.project {
						name project.name
						description project.description
						packaging 'jar'
						url 'https://github.com/mini2Dx/jarn'
	
						scm {
							connection 'scm:git:https://github.com/mini2Dx/jarn.git'
							developerConnection 'scm:git:git@github.com:mini2Dx/jarn.git'
							url 'https://github.com/mini2Dx/jarn.git'
						}
	
						licenses {
							license {
								name 'The MIT License (MIT)'
								url 'https://opensource.org/licenses/MIT'
								distribution 'repo'
							}
						}
	
						developers {
							developer {
								id = 'tomcashman'
								name = 'Thomas Cashman'
								email = 'thomascashman404@gmail.com'
							}
						}
					}
				}
			}
		}
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}
